{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore, collection, addDoc, where, FirebaseFirestore } from \"firebase\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, updateProfile } from \"firebase/auth\";\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-R09VkjUXihyEYP6fY6gHAMIvzJ2wWSI\",\n  authDomain: \"forgetmenot-22106.firebaseapp.com\",\n  projectId: \"forgetmenot-22106\",\n  storageBucket: \"forgetmenot-22106.appspot.com\",\n  messagingSenderId: \"616340791825\",\n  appId: \"1:616340791825:web:8366960c8a403e105e07b0\",\n  measurementId: \"G-WFQG8N9385\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst students = FirebaseFirestore.instance.collection(\"students\");\nconst teachers = FirebaseFirestore.instance.collection(\"teachers\");\nconst storage = getStorage();\nexport async function signup(email, password, name, role) {\n  try {\n    const userCred = await createUserWithEmailAndPassword(auth, email, password);\n    userCred.user.displayName = name;\n\n    if (role == \"teacher\") {\n      teachers.doc(userCred.user.uid).set({\n        userid: userCred.user.uid,\n        name: name,\n        email: email\n      });\n    } else {\n      students.doc(userCred.user.uid).set({\n        name: name,\n        email: email,\n        userid: userCred.user.uid\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\nexport function logout() {\n  return signOut(auth);\n} // Custom Hook\n\nexport function useAuth() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n    return unsub;\n  }, []);\n  return currentUser;\n}\n\n_s(useAuth, \"JvEwyYHOqow2S+nE9g1bJVQib+s=\");","map":{"version":3,"sources":["/Users/gracecai/Downloads/Dev/WebDev/ForgetMeNot/src/Firebase/firebase.js"],"names":["initializeApp","getAnalytics","getFirestore","collection","addDoc","where","FirebaseFirestore","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","updateProfile","getDownloadURL","getStorage","ref","uploadBytes","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","db","students","instance","teachers","storage","signup","email","password","name","role","userCred","user","displayName","doc","uid","set","userid","error","console","log","login","logout","useAuth","currentUser","setCurrentUser","useState","useEffect","unsub"],"mappings":"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","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport {getFirestore, collection, addDoc, where, FirebaseFirestore} from \"firebase\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, updateProfile } from \"firebase/auth\";\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-R09VkjUXihyEYP6fY6gHAMIvzJ2wWSI\",\n  authDomain: \"forgetmenot-22106.firebaseapp.com\",\n  projectId: \"forgetmenot-22106\",\n  storageBucket: \"forgetmenot-22106.appspot.com\",\n  messagingSenderId: \"616340791825\",\n  appId: \"1:616340791825:web:8366960c8a403e105e07b0\",\n  measurementId: \"G-WFQG8N9385\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst students = FirebaseFirestore.instance.collection(\"students\");\nconst teachers = FirebaseFirestore.instance.collection(\"teachers\");\nconst storage = getStorage();\n\nexport async function signup(email, password, name, role) {\n\n  try {\n    const userCred = await createUserWithEmailAndPassword(auth, email, password);\n    userCred.user.displayName = name;\n    if(role==\"teacher\") \n    {\n      teachers.doc(userCred.user.uid).set({\n      userid: userCred.user.uid,\n      name: name,\n      email: email,\n    });} else {\n      students.doc(userCred.user.uid).set({\n        name: name,\n        email: email,\n        userid: userCred.user.uid,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function login(email, password) {\n\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport function logout() {\n  return signOut(auth);\n}\n\n// Custom Hook\nexport function useAuth() {\n  const [ currentUser, setCurrentUser ] = useState();\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n    return unsub;\n  }, [])\n\n  return currentUser;\n}"]},"metadata":{},"sourceType":"module"}