{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Import the functions you need from the SDKs you need\nimport firebase from 'firebase';\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-R09VkjUXihyEYP6fY6gHAMIvzJ2wWSI\",\n  authDomain: \"forgetmenot-22106.firebaseapp.com\",\n  projectId: \"forgetmenot-22106\",\n  storageBucket: \"forgetmenot-22106.appspot.com\",\n  messagingSenderId: \"616340791825\",\n  appId: \"1:616340791825:web:8366960c8a403e105e07b0\",\n  measurementId: \"G-WFQG8N9385\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst students = FirebaseFirestore.instance.collection(\"students\");\nconst teachers = FirebaseFirestore.instance.collection(\"teachers\");\nconst storage = getStorage();\nexport async function signup(email, password, name, role) {\n  try {\n    const userCred = await createUserWithEmailAndPassword(auth, email, password);\n    userCred.user.displayName = name;\n\n    if (role == \"teacher\") {\n      teachers.doc(userCred.user.uid).set({\n        userid: userCred.user.uid,\n        name: name,\n        email: email\n      });\n    } else {\n      students.doc(userCred.user.uid).set({\n        name: name,\n        email: email,\n        userid: userCred.user.uid\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\nexport function logout() {\n  return signOut(auth);\n} // Custom Hook\n\nexport function useAuth() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n    return unsub;\n  }, []);\n  return currentUser;\n}\n\n_s(useAuth, \"JvEwyYHOqow2S+nE9g1bJVQib+s=\");","map":{"version":3,"sources":["/Users/gracecai/Downloads/Dev/WebDev/ForgetMeNot/src/Firebase/firebase.js"],"names":["firebase","initializeApp","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","getAuth","db","getFirestore","students","FirebaseFirestore","instance","collection","teachers","storage","getStorage","signup","email","password","name","role","userCred","createUserWithEmailAndPassword","user","displayName","doc","uid","set","userid","error","console","log","login","signInWithEmailAndPassword","logout","signOut","useAuth","currentUser","setCurrentUser","useState","useEffect","unsub","onAuthStateChanged"],"mappings":";;AAAA;AACA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B,C,CACA;AACA;AAEA;AACA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,mCAFS;AAGrBC,EAAAA,SAAS,EAAE,mBAHU;AAIrBC,EAAAA,aAAa,EAAE,+BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB,C,CAUA;;AACA,MAAMC,GAAG,GAAGV,aAAa,CAACE,cAAD,CAAzB;AACA,MAAMS,SAAS,GAAGV,YAAY,CAACS,GAAD,CAA9B;AACA,MAAME,IAAI,GAAGC,OAAO,CAACH,GAAD,CAApB;AACA,MAAMI,EAAE,GAAGC,YAAY,CAACL,GAAD,CAAvB;AACA,MAAMM,QAAQ,GAAGC,iBAAiB,CAACC,QAAlB,CAA2BC,UAA3B,CAAsC,UAAtC,CAAjB;AACA,MAAMC,QAAQ,GAAGH,iBAAiB,CAACC,QAAlB,CAA2BC,UAA3B,CAAsC,UAAtC,CAAjB;AACA,MAAME,OAAO,GAAGC,UAAU,EAA1B;AAEA,OAAO,eAAeC,MAAf,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmD;AAExD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,8BAA8B,CAACjB,IAAD,EAAOY,KAAP,EAAcC,QAAd,CAArD;AACAG,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,GAA4BL,IAA5B;;AACA,QAAGC,IAAI,IAAE,SAAT,EACA;AACEP,MAAAA,QAAQ,CAACY,GAAT,CAAaJ,QAAQ,CAACE,IAAT,CAAcG,GAA3B,EAAgCC,GAAhC,CAAoC;AACpCC,QAAAA,MAAM,EAAEP,QAAQ,CAACE,IAAT,CAAcG,GADc;AAEpCP,QAAAA,IAAI,EAAEA,IAF8B;AAGpCF,QAAAA,KAAK,EAAEA;AAH6B,OAApC;AAIE,KANJ,MAMU;AACRR,MAAAA,QAAQ,CAACgB,GAAT,CAAaJ,QAAQ,CAACE,IAAT,CAAcG,GAA3B,EAAgCC,GAAhC,CAAoC;AAClCR,QAAAA,IAAI,EAAEA,IAD4B;AAElCF,QAAAA,KAAK,EAAEA,KAF2B;AAGlCW,QAAAA,MAAM,EAAEP,QAAQ,CAACE,IAAT,CAAcG;AAHY,OAApC;AAKD;AACF,GAhBD,CAgBE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AAED,OAAO,SAASG,KAAT,CAAef,KAAf,EAAsBC,QAAtB,EAAgC;AAErC,SAAOe,0BAA0B,CAAC5B,IAAD,EAAOY,KAAP,EAAcC,QAAd,CAAjC;AACD;AAED,OAAO,SAASgB,MAAT,GAAkB;AACvB,SAAOC,OAAO,CAAC9B,IAAD,CAAd;AACD,C,CAED;;AACA,OAAO,SAAS+B,OAAT,GAAmB;AAAA;;AACxB,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCC,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,KAAK,GAAGC,kBAAkB,CAACrC,IAAD,EAAOkB,IAAI,IAAIe,cAAc,CAACf,IAAD,CAA7B,CAAhC;AACA,WAAOkB,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAOJ,WAAP;AACD;;GATeD,O","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from 'firebase';\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-R09VkjUXihyEYP6fY6gHAMIvzJ2wWSI\",\n  authDomain: \"forgetmenot-22106.firebaseapp.com\",\n  projectId: \"forgetmenot-22106\",\n  storageBucket: \"forgetmenot-22106.appspot.com\",\n  messagingSenderId: \"616340791825\",\n  appId: \"1:616340791825:web:8366960c8a403e105e07b0\",\n  measurementId: \"G-WFQG8N9385\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst students = FirebaseFirestore.instance.collection(\"students\");\nconst teachers = FirebaseFirestore.instance.collection(\"teachers\");\nconst storage = getStorage();\n\nexport async function signup(email, password, name, role) {\n\n  try {\n    const userCred = await createUserWithEmailAndPassword(auth, email, password);\n    userCred.user.displayName = name;\n    if(role==\"teacher\") \n    {\n      teachers.doc(userCred.user.uid).set({\n      userid: userCred.user.uid,\n      name: name,\n      email: email,\n    });} else {\n      students.doc(userCred.user.uid).set({\n        name: name,\n        email: email,\n        userid: userCred.user.uid,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function login(email, password) {\n\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport function logout() {\n  return signOut(auth);\n}\n\n// Custom Hook\nexport function useAuth() {\n  const [ currentUser, setCurrentUser ] = useState();\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n    return unsub;\n  }, [])\n\n  return currentUser;\n}"]},"metadata":{},"sourceType":"module"}