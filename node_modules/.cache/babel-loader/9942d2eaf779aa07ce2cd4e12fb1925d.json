{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore, collection, addDoc, where } from \"firebase/firestore\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, updateProfile } from \"firebase/auth\";\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-R09VkjUXihyEYP6fY6gHAMIvzJ2wWSI\",\n  authDomain: \"forgetmenot-22106.firebaseapp.com\",\n  projectId: \"forgetmenot-22106\",\n  storageBucket: \"forgetmenot-22106.appspot.com\",\n  messagingSenderId: \"616340791825\",\n  appId: \"1:616340791825:web:8366960c8a403e105e07b0\",\n  measurementId: \"G-WFQG8N9385\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nexport default app;\nexport const auth = getAuth(app); // const analytics = getAnalytics(app);\n// const db = getFirestore(app);\n// const students = FirebaseFirestore.instance.collection(\"students\");\n// const teachers = FirebaseFirestore.instance.collection(\"teachers\");\n// const storage = getStorage();\n// export async function signup(email, password, name, role) {\n//   try {\n//     const userCred = await createUserWithEmailAndPassword(auth, email, password);\n//     userCred.user.displayName = name;\n//     if(role==\"teacher\") \n//     {\n//       teachers.doc(userCred.user.uid).set({\n//       userid: userCred.user.uid,\n//       name: name,\n//       email: email,\n//     });} else {\n//       students.doc(userCred.user.uid).set({\n//         name: name,\n//         email: email,\n//         userid: userCred.user.uid,\n//       });\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n// export function login(email, password) {\n//   return signInWithEmailAndPassword(auth, email, password);\n// }\n// export function logout() {\n//   return signOut(auth);\n// }\n// // Custom Hook\n// export function useAuth() {\n//   const [ currentUser, setCurrentUser ] = useState();\n//   useEffect(() => {\n//     const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n//     return unsub;\n//   }, [])\n//   return currentUser;\n// }","map":{"version":3,"sources":["/Users/gracecai/Downloads/Dev/WebDev/ForgetMeNot/src/Firebase/firebase.js"],"names":["initializeApp","getAnalytics","getFirestore","collection","addDoc","where","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","updateProfile","getDownloadURL","getStorage","ref","uploadBytes","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAAQC,YAAR,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAsD,oBAAtD;AACA,SAASC,OAAT,EAAkBC,8BAAlB,EAAkDC,0BAAlD,EAA8EC,kBAA9E,EAAkGC,OAAlG,EAA2GC,aAA3G,QAAgI,eAAhI;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,GAArC,EAA0CC,WAA1C,QAA6D,kBAA7D,C,CACA;AACA;AAEA;AACA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,mCAFS;AAGrBC,EAAAA,SAAS,EAAE,mBAHU;AAIrBC,EAAAA,aAAa,EAAE,+BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB,C,CAUA;;AACA,MAAMC,GAAG,GAAGxB,aAAa,CAACgB,cAAD,CAAzB;AACA,eAAeQ,GAAf;AACA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,CAACkB,GAAD,CAApB,C,CACP;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport {getFirestore, collection, addDoc, where} from \"firebase/firestore\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, updateProfile } from \"firebase/auth\";\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-R09VkjUXihyEYP6fY6gHAMIvzJ2wWSI\",\n  authDomain: \"forgetmenot-22106.firebaseapp.com\",\n  projectId: \"forgetmenot-22106\",\n  storageBucket: \"forgetmenot-22106.appspot.com\",\n  messagingSenderId: \"616340791825\",\n  appId: \"1:616340791825:web:8366960c8a403e105e07b0\",\n  measurementId: \"G-WFQG8N9385\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport default app;\nexport const auth = getAuth(app);\n// const analytics = getAnalytics(app);\n\n// const db = getFirestore(app);\n// const students = FirebaseFirestore.instance.collection(\"students\");\n// const teachers = FirebaseFirestore.instance.collection(\"teachers\");\n// const storage = getStorage();\n\n// export async function signup(email, password, name, role) {\n\n//   try {\n//     const userCred = await createUserWithEmailAndPassword(auth, email, password);\n//     userCred.user.displayName = name;\n//     if(role==\"teacher\") \n//     {\n//       teachers.doc(userCred.user.uid).set({\n//       userid: userCred.user.uid,\n//       name: name,\n//       email: email,\n//     });} else {\n//       students.doc(userCred.user.uid).set({\n//         name: name,\n//         email: email,\n//         userid: userCred.user.uid,\n//       });\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// export function login(email, password) {\n\n//   return signInWithEmailAndPassword(auth, email, password);\n// }\n\n// export function logout() {\n//   return signOut(auth);\n// }\n\n// // Custom Hook\n// export function useAuth() {\n//   const [ currentUser, setCurrentUser ] = useState();\n\n//   useEffect(() => {\n//     const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n//     return unsub;\n//   }, [])\n\n//   return currentUser;\n// }"]},"metadata":{},"sourceType":"module"}